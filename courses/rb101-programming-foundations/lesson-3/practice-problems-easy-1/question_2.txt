Describe the difference between ! and ? in Ruby. And explain what would happen in the following scenarios:

1. what is != and where should you use it?
2. put ! before something, like !user_name
3. put ! after something, like words.uniq!
4. put ? before something
5. put ? after something
6. put !! before something, like !!user_name

My answer:
!: normally indicate a "no" scenario. And a destructive method.
?: in the method name normally indicate this method returns a boolean value

1. != means "not equal". should be used in a conditional statement.
2. means prepending a "non"
3. means this is a destructive method
4. 
5. in the method name, "?" normally indicates this method returns a boolean value
6. means turning this variable to a boolean value.

LS answer:
Just to clarify, if you see ! or ? at the end of the method, it's actually part of the method name, and not Ruby syntax. Therefore, you really don't know what the method is doing, even if it ends in those characters -- it depends on the method implementation. The other uses are actual Ruby syntax:

!= means "not equals"
? : is the ternary operator for if...else
!!<some object> is used to turn any object into their boolean equivalent. (Try it in irb)
!<some object> is used to turn any object into the opposite of their boolean equivalent, just like the above, but opposite. 